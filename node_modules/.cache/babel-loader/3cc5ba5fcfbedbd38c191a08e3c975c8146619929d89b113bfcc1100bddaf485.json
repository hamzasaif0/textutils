{"ast":null,"code":"var _jsxFileName = \"/home/hamza/Desktop/reactjs/newreact/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\n// import Aboutus from './component/Aboutus';\nimport Text from './component/Text';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const [textcolor, settextcolor] = useState('dark');\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  const togglemode = () => {\n    if (mode == 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showalert(\"You are entered in Dark mode\", \"Sucess\");\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"You are entered in Light mode\", \"Sucess\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      text: \"TextUtils\",\n      mode: mode,\n      togglemode: togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      mode: mode,\n      alert: showalert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"B0UoK9aqr5/d1WzoOTrNdjrD6II=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Navbar","Text","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","alert","setalert","textcolor","settextcolor","showalert","message","type","msg","setTimeout","togglemode","document","body","style","backgroundColor","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hamza/Desktop/reactjs/newreact/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\n// import Aboutus from './component/Aboutus';\nimport Text from './component/Text';\nimport React ,{useState}from 'react'\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setmode] = useState('light');\n  const [alert,setalert]=useState(null);\n  const [textcolor,settextcolor] = useState('dark');\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n   setalert(null);\n    },2000);\n  }\n  \n  const togglemode =()=>{\n    if(mode=='light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n    showalert(\"You are entered in Dark mode\",\"Sucess\");\n    }else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"You are entered in Light mode\",\"Sucess\");\n    }\n  }\n  \n\n  return (\n   <>\n    <Navbar text = \"TextUtils\" mode={mode} togglemode={togglemode}/>\n    <Text mode={mode}  alert={showalert}/>\n    <Alert alert={alert}/>\n    {/* <Router>\n    <Navbar text = \"TextUtils\" mode={mode} togglemode={togglemode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n   <Routes>\n          <Route path=\"/about\" element={<Aboutus/> }>\n            \n          </Route>\n          <Route path=\"/text\"element={<Text mode={mode}  alert={showalert}/> }>\n          \n          </Route>\n        </Routes>\n     </div>\n    </Router> */}\n  \n   \n    \n     </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,oBAAoB;AACvC;AACA,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,KAAK,IAAGC,QAAQ,QAAM,OAAO;AACpC,OAAOC,KAAK,MAAM,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACU,KAAK,EAACC,QAAQ,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EACrC,MAAM,CAACY,SAAS,EAACC,YAAY,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EACjD,MAAMc,SAAS,GAACA,CAACC,OAAO,EAACC,IAAI,KAAG;IAC9BL,QAAQ,CAAC;MACPM,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAI;MAChBP,QAAQ,CAAC,IAAI,CAAC;IACb,CAAC,EAAC,IAAI,CAAC;EACT,CAAC;EAED,MAAMQ,UAAU,GAAEA,CAAA,KAAI;IACpB,IAAGX,IAAI,IAAE,OAAO,EAAC;MACfC,OAAO,CAAC,MAAM,CAAC;MACfW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MACjDT,SAAS,CAAC,8BAA8B,EAAC,QAAQ,CAAC;IAClD,CAAC,MAAI;MACHL,OAAO,CAAC,OAAO,CAAC;MAChBW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,+BAA+B,EAAC,QAAQ,CAAC;IACrD;EACF,CAAC;EAGD,oBACCX,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACCrB,OAAA,CAACN,MAAM;MAAC4B,IAAI,EAAG,WAAW;MAACjB,IAAI,EAAEA,IAAK;MAACW,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChE1B,OAAA,CAACL,IAAI;MAACU,IAAI,EAAEA,IAAK;MAAEE,KAAK,EAAEI;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtC1B,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAkBnB,CAAC;AAER;AAACtB,EAAA,CAnDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}