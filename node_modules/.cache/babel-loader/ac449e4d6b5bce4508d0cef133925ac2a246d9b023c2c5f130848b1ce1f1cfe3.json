{"ast":null,"code":"var _jsxFileName = \"/home/hamza/Desktop/reactjs/newreact/src/component/Text.js\",\n  _s = $RefreshSig$();\nimport Reacte, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Text(props) {\n  _s();\n  const touppercase = () => {\n    let updatedtext = text.toUpperCase();\n    newtext(updatedtext);\n    props.alert(\"Text has been converted to Upper case letters\", \"Sucess\");\n  };\n  const tolowcase = () => {\n    let updatedtext = text.toLowerCase();\n    newtext(updatedtext);\n    props.alert(\"Text has been converted to Lower case letters\", \"Sucess\");\n  };\n  const [text, newtext] = useState(\"Hello\");\n  const onchanging = evt => {\n    newtext(evt.target.value);\n    console.log(text);\n  };\n  const calculate = () => {\n    let textarea = document.querySelector(\"textarea\");\n    textarea.addEventListner('textarea', calculateWords());\n  };\n  function calculateWords(e) {\n    const fieldValue = e.target.value;\n    let numOfWords;\n    fieldValue ? numOfWords = fieldValue.match(/\\S+/g).length : numOfWords = 0;\n    console.log(numOfWords);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formmain\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form\",\n          calculate: calculate,\n          value: text,\n          onChange: onchanging,\n          style: {\n            backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\n            color: props.mode === 'dark' ? 'white' : 'black'\n          },\n          id: \"floatingTextarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btnupper\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: touppercase,\n          children: \"Convert to Upper case \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mx-3\",\n          onClick: tolowcase,\n          children: \"Convert to lower case \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"sum\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: \"Summary :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"para\",\n        style: {\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        children: [\"There are \", \" words and \", text.length, \"charcters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        children: \"Preview :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"para\",\n        style: {\n          color: props.mode === 'dark' ? 'white' : 'black'\n        },\n        children: [\" \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(Text, \"0JoS8FQF6CdHO8nY/WrizGASB18=\");\n_c = Text;\nvar _c;\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["Reacte","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Text","props","_s","touppercase","updatedtext","text","toUpperCase","newtext","alert","tolowcase","toLowerCase","onchanging","evt","target","value","console","log","calculate","textarea","document","querySelector","addEventListner","calculateWords","e","fieldValue","numOfWords","match","length","children","className","onChange","style","backgroundColor","mode","color","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/hamza/Desktop/reactjs/newreact/src/component/Text.js"],"sourcesContent":["import Reacte,{useState} from \"react\";\n\n\n\nexport default function Text(props) {\n  const touppercase=()=>{\n    let updatedtext=text.toUpperCase();\n    newtext(updatedtext);\n    props.alert(\"Text has been converted to Upper case letters\",\"Sucess\");\n  }\n  const tolowcase=()=>{\n    let updatedtext=text.toLowerCase();\n    newtext(updatedtext);\n    props.alert(\"Text has been converted to Lower case letters\",\"Sucess\");\n  }\n  \n  const [text,newtext]=useState(\"Hello\");\n  const onchanging=(evt)=>{\n  \n  newtext(evt.target.value);\n  console.log(text);\n  }\n  const calculate=()=>{\n   let textarea= document.querySelector(\"textarea\");\n    textarea.addEventListner('textarea',calculateWords());\n  }\n  function calculateWords(e) {\n    const fieldValue = e.target.value;\n    let numOfWords;\n    fieldValue\n      ? (numOfWords = fieldValue.match(/\\S+/g).length)\n      : (numOfWords = 0);\n    console.log(numOfWords);\n  }\n  \n  return (\n    <>\n    <div>\n    <div className=\"formmain\" >\n    \n  <textarea className=\"form\" calculate={calculate} value={text} onChange={onchanging} style={{backgroundColor : props.mode==='dark'?'grey':'white',color : props.mode==='dark'?'white':'black'}} id=\"floatingTextarea\" ></textarea>\n\n</div>\n<div className=\"btnupper\">\n<button className=\"btn btn-primary\" onClick={touppercase}>Convert to Upper case </button>\n<button className=\"btn btn-primary mx-3\" onClick={tolowcase}>Convert to lower case </button>\n</div>\n</div>\n<h2 className=\"sum\"style={{color : props.mode==='dark'?'white':'black'}}>Summary :</h2>\n<div className=\"summary\">\n \n  <p className=\"para\"style={{color : props.mode==='dark'?'white':'black'}}>There are {} words and {text.length}charcters</p>\n  <h3 style={{color : props.mode==='dark'?'white':'black'}}>Preview :</h3>\n  <p className=\"para\" style={{color : props.mode==='dark'?'white':'black'}}> {text}</p>\n</div>\n\n</>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}