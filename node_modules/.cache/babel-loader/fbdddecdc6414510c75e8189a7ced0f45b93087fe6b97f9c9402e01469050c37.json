{"ast":null,"code":"var _jsxFileName = \"/home/hamza/Desktop/reactjs/newreact/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\n// import Aboutus from './component/Aboutus';\nimport Text from './component/Text';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [textcolor, settextcolor] = useState('dark');\n  const togglemode = () => {\n    if (mode == 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = 'grey';\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      text: \"TextUtils\",\n      mode: mode,\n      togglemode: togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Text, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(App, \"XltdsedgotWtTAGI42OFxJVZ0kQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Navbar","Text","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","textcolor","settextcolor","togglemode","document","body","style","backgroundColor","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hamza/Desktop/reactjs/newreact/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\n// import Aboutus from './component/Aboutus';\nimport Text from './component/Text';\nimport React ,{useState}from 'react'\nfunction App() {\n  const [mode,setmode] = useState('light');\n  const [textcolor,settextcolor] = useState('dark');\n  const togglemode =()=>{\n    if(mode=='light'){\n      setmode('dark');\n      document.body.style.backgroundColor = 'grey';\n    \n    }else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n   <>\n     <Navbar text = \"TextUtils\" mode={mode} togglemode={togglemode}/>\n     \n     <Text />\n     {/* <Aboutus/> */};\n     </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,oBAAoB;AACvC;AACA,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,KAAK,IAAGC,QAAQ,QAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACS,SAAS,EAACC,YAAY,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACjD,MAAMW,UAAU,GAAEA,CAAA,KAAI;IACpB,IAAGJ,IAAI,IAAE,OAAO,EAAC;MACfC,OAAO,CAAC,MAAM,CAAC;MACfI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,MAAM;IAE9C,CAAC,MAAI;MACHP,OAAO,CAAC,OAAO,CAAC;MAChBI,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAC/C;EACF,CAAC;EACD,oBACCb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACL,MAAM;MAACoB,IAAI,EAAG,WAAW;MAACV,IAAI,EAAEA,IAAK;MAACI,UAAU,EAAEA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEhEnB,OAAA,CAACJ,IAAI;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACU,GAClB;EAAA,eAAE,CAAC;AAER;AAACf,EAAA,CArBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}