{"ast":null,"code":"var _jsxFileName = \"/home/hamza/Desktop/reactjs/newreact/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Aboutus from './component/Aboutus';\nimport Text from './component/Text';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const [textcolor, settextcolor] = useState('dark');\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  const togglemode = () => {\n    if (mode == 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showalert(\"You are entered in Dark mode\", \"Sucess\");\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"You are entered in Light mode\", \"Sucess\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        text: \"TextUtils\",\n        mode: mode,\n        togglemode: togglemode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: [/*#__PURE__*/_jsxDEV(Aboutus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 12\n          }, this), \";\", /*#__PURE__*/_jsxDEV(Alert, {\n            alert: alert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/text\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            mode: mode,\n            alert: showalert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"B0UoK9aqr5/d1WzoOTrNdjrD6II=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Navbar","Aboutus","Text","React","useState","Alert","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","alert","setalert","textcolor","settextcolor","showalert","message","type","msg","setTimeout","togglemode","document","body","style","backgroundColor","children","text","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["/home/hamza/Desktop/reactjs/newreact/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Aboutus from './component/Aboutus';\nimport Text from './component/Text';\nimport React ,{useState}from 'react'\nimport Alert from './component/Alert';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setmode] = useState('light');\n  const [alert,setalert]=useState(null);\n  const [textcolor,settextcolor] = useState('dark');\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n   setalert(null);\n    },2000);\n  }\n  \n  const togglemode =()=>{\n    if(mode=='light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n    showalert(\"You are entered in Dark mode\",\"Sucess\");\n    }else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"You are entered in Light mode\",\"Sucess\");\n    }\n  }\n  \n\n  return (\n   <>\n    \n    <Router>\n    <Navbar text = \"TextUtils\" mode={mode} togglemode={togglemode}/>\n   <Switch>\n          <Route path=\"/about\">\n          {<Aboutus/> };\n            <Alert alert={alert}/>\n          </Route>\n          <Route path=\"/text\">\n          <Text mode={mode}  alert={showalert} />\n          </Route>\n        </Switch>\n     \n    </Router>\n    \n    \n     \n   \n    \n     </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,KAAK,IAAGC,QAAQ,QAAM,OAAO;AACpC,OAAOC,KAAK,MAAM,mBAAmB;AAErC,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACe,KAAK,EAACC,QAAQ,CAAC,GAAChB,QAAQ,CAAC,IAAI,CAAC;EACrC,MAAM,CAACiB,SAAS,EAACC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,MAAM,CAAC;EACjD,MAAMmB,SAAS,GAACA,CAACC,OAAO,EAACC,IAAI,KAAG;IAC9BL,QAAQ,CAAC;MACPM,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACP,CAAC,CAAC;IACFE,UAAU,CAAC,MAAI;MAChBP,QAAQ,CAAC,IAAI,CAAC;IACb,CAAC,EAAC,IAAI,CAAC;EACT,CAAC;EAED,MAAMQ,UAAU,GAAEA,CAAA,KAAI;IACpB,IAAGX,IAAI,IAAE,OAAO,EAAC;MACfC,OAAO,CAAC,MAAM,CAAC;MACfW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MACjDT,SAAS,CAAC,8BAA8B,EAAC,QAAQ,CAAC;IAClD,CAAC,MAAI;MACHL,OAAO,CAAC,OAAO,CAAC;MAChBW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,+BAA+B,EAAC,QAAQ,CAAC;IACrD;EACF,CAAC;EAGD,oBACCX,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eAECrB,OAAA,CAACL,MAAM;MAAA0B,QAAA,gBACPrB,OAAA,CAACZ,MAAM;QAACkC,IAAI,EAAG,WAAW;QAACjB,IAAI,EAAEA,IAAK;QAACW,UAAU,EAAEA;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjE1B,OAAA,CAACJ,MAAM;QAAAyB,QAAA,gBACArB,OAAA,CAACH,KAAK;UAAC8B,IAAI,EAAC,QAAQ;UAAAN,QAAA,gBACnBrB,OAAA,CAACX,OAAO;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,EAAE,GACX,eAAA1B,OAAA,CAACP,KAAK;YAACc,KAAK,EAAEA;UAAM;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACR1B,OAAA,CAACH,KAAK;UAAC8B,IAAI,EAAC,OAAO;UAAAN,QAAA,eACnBrB,OAAA,CAACV,IAAI;YAACe,IAAI,EAAEA,IAAK;YAAEE,KAAK,EAAEI;UAAU;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC,gBAMN,CAAC;AAER;AAACtB,EAAA,CAlDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}