{"ast":null,"code":"var _jsxFileName = \"/home/hamza/Desktop/reactjs/newreact/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\n// import Aboutus from './component/Aboutus';\nimport Text from './component/Text';\nimport React, { useState } from 'react';\nimport Alert from './component/Alert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const [textcolor, settextcolor] = useState('dark');\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  const togglemode = () => {\n    if (mode == 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showalert(\"You are entered in Dark mode\", \"Sucess\");\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"You are entered in Light mode\", \"Sucess\");\n    }\n  };\n  let count = 0;\n  const calculate = () => {\n    let textarea = document.querySelector(\"textarea\");\n    for (let i = 0; i < textarea.length; i++) {\n      let word = textarea[i];\n      if (word.indexof(' ') >= 0 & textarea[i - 1] != \" \") {\n        count++;\n      } else {\n        count = 0;\n      }\n      console.log(count);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      text: \"TextUtils\",\n      mode: mode,\n      togglemode: togglemode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      mode: mode,\n      alert: showalert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }, this), \";\"]\n  }, void 0, true);\n}\n_s(App, \"B0UoK9aqr5/d1WzoOTrNdjrD6II=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Navbar","Text","React","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","alert","setalert","textcolor","settextcolor","showalert","message","type","msg","setTimeout","togglemode","document","body","style","backgroundColor","count","calculate","textarea","querySelector","i","length","word","indexof","console","log","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hamza/Desktop/reactjs/newreact/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\n// import Aboutus from './component/Aboutus';\nimport Text from './component/Text';\nimport React ,{useState}from 'react'\nimport Alert from './component/Alert';\nfunction App() {\n  const [mode,setmode] = useState('light');\n  const [alert,setalert]=useState(null);\n  const [textcolor,settextcolor] = useState('dark');\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n   setalert(null);\n    },2000);\n  }\n  \n  const togglemode =()=>{\n    if(mode=='light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n    showalert(\"You are entered in Dark mode\",\"Sucess\");\n    }else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"You are entered in Light mode\",\"Sucess\");\n    }\n  }\n  let count=0;\n  const calculate=()=>{\n    let textarea= document.querySelector(\"textarea\");\n     for(let i=0;i<textarea.length;i++){\n       let word=textarea[i];\n       if(word.indexof(' ')>=0 & textarea[i-1]!=\" \"){\n   count++;\n       }\n       else{\n         count=0;\n       }\n       console.log(count);\n     }\n   }\n  return (\n   <>\n     <Navbar text = \"TextUtils\" mode={mode} togglemode={togglemode}/>\n     <Alert alert={alert}/>\n     <Text mode={mode}  alert={showalert} />\n     {/* <Aboutus/> */};\n    \n     </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}